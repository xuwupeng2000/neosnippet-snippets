snippet ngcontroller
  (() => {
    'use strict';

    angular
      .module('${1:module}')
      .controller('${2: controllerlName}', controller);

    controller.$inject = ['$scope'];

    function controller($scope) {
      activate();

      function activate() {
      }

    }
  })();

snippet ngmmodule
    (() => {
      'use strict';

      let App = angular
        .module('${1:module}', [
          'restangular', 'templates'
        ])
      .config(function() {

      })
      .run(function() {
      });

    })();

# A factory in a module
snippet ngfactory
  (() => {
    'use strict';

    angular
        .module('${1:module}')
        .factory('${2:factoryName}', factory);

    factory.$inject = ['dependencies'];

    function factory(dependencies) {
      let object ={};
      return object;
    }
  })();

snippet ngservice
  (() => {
    'use strict';

    angular
      .module('${1:module}')
      .service('${2:service}', service);

    service.$inject = ['dependencies'];

    function service(dependencies) {
      let service = {};

      return service;
    }
  })();

snippet ngfilter
  (() => {
    'use strict';

    filter('${1:filter}', function(${2:injectables}) {
      return function(input, ${3:args}) {
        return converted;
      };
    });
  })();

snippet ngroute
	$routeProvider.when('${1:url}', {
		templateUrl: '${2:templateUrl}',
		controller: '${3:controller}'
	});

snippet $value
	$scope.${1:variable} = ${2:value};

snippet $w
	$scope.$watch('${1:watchExpr}', function(newValue, oldValue) {
		${2}
	});

snippet $on
	$scope.$on('${1:eventName}', function(event, ${2:args}) {
		${3}
	});
